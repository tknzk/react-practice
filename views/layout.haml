%html
  %head
    %title
      React Practice
    %meta{charset: 'UTF-8'}/
    %meta{name: 'viewport', content: 'width=device-width, initial-scale=1.0'}
    %meta{name: 'description', content: ''}
    %meta{name: 'keyword', content:''}

    -#%link{rel: 'stylesheet', href: '//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css'}
    -#%link{rel: 'stylesheet', href: '//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css'}
    -#%script{src: '//fb.me/react-0.11.1.js'}
    -#%script{src: '//fb.me/JSXTransformer-0.11.1.js'}
    %script{src: '/build/react.js'}
    %script{src: '/build/JSXTransformer.js'}
    -#%script{src: '//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js'}

    -#:javascript
    -#  /** @jsx React.DOM */
    -#  App = React.createClass({displayName: 'App',
    -#    getInitialState: function() {
    -#      return {
    -#        items: [
    -#          { text: "Foo" },
    -#          { text: "Bar" },
    -#          { text: "aa" },
    -#          { text: "Buzz" }
    -#        ]
    -#      };
    -#    },
    -#    render: function() {
    -#      return React.createElement("div", null, 
    -#        React.createElement("div", null, 
    -#          this.state.items.map(function(item) {
    -#            return React.createElement("div", {className: "item"}, item.text);
    -#          })
    -#        )
    -#      );
    -#    }
    -#  });
    -#  React.render(React.createElement(App, null), document.body);



  %body
    %div{class: "container"}
      %h1 React Practice

      != yield
      %div{id: 'example'}

      :erb
        <script type="text/jsx">
          React.render(
            <h1>Hello, React world!</h1>,
            document.getElementById('example')
          );
        </script>


